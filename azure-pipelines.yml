# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

jobs:
  - job: Windows_VS2017_x86
    pool:
      vmImage: 'vs2015-win2012r2'
    steps:
    - script: mkdir build
      displayName: Make Build Directory
    - task: CMake@1
      inputs:
        workingDirectory: 'build'
        cmakeArgs: '..'
    - task: MSBuild@1
      inputs:
        solution: 'build/ALL_BUILD.vcxproj'
        maximumCpuCount: true
        configuration: release
#pool:
#  vmImage: 'VS2017-Win2016'
# 'VS2017-Win2016' or 'vs2015-win2012r2'

#- task: CMake@1
#  inputs:
#    workingDirectory: 'build.common'
#    cmakeArgs: '-DCMAKE_BUILD_TYPE=Release'

#- task: MSBuild@1
#  inputs:
#    solution: 'build.common/ALL_BUILD.vcxproj'
#    maximumCpuCount: true


#steps:
# - script: choco install doxygen.install
# - script: cmake -G"Visual Studio 15 2017"
# - script: cmake --build . --config Debug --target ALL_BUILD
# - script: cmake --build . --config Debug --target package
# - script: cmake --build . --config Release --target ALL_BUILD
# - script: cmake --build . --config Release --target package

#- task: NuGetToolInstaller@0

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'
#
#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
#
#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
