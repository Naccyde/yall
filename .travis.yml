#
# Travis configuration file
#
# Used to setup proper build on Travis CI.
#
# CMake flags :
#   * BUILD_TYPE : Debug or Release
#   * PROJECT_CI_DEPLOY : enable install inside the build directory
#
# Install gcc-6 and lcov for coverage report. A recent version of CMake is also
# downloaded.
#
# Unit tests are run after each build. For the master and develop branches, the
# release build is analyzed through SonarQube.
#
# Each tag create a release on GitHub. Also, only commits on master should be
# tagged.
#

language: c

sudo: required
dist: trusty

matrix:
  include:
    - os: linux
      compiler: gcc-6
      env: BUILD_TYPE=Debug CMAKE_CONFIG="-DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DPROJECT-MISC_CI_DEPLOY=on"
    - os: linux
      compiler: gcc-6
      env: BUILD_TYPE=Release CMAKE_CONFIG="-DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DPROJECT-MISC_CI_DEPLOY=on"

addons:
  apt:
    packages:
      - gcc-6
      - lcov
    sources:
      - ubuntu-toolchain-r-test
  sonarqube:
    token:
      secure: "kDTCOlpGPj2/rudRHjsoIurDlZYmqVHwPx5WnxexeGPmufUdR+SDstPTWevrjVEb/nnWb6GRropaS+iQ7gj7f6hOkg3cmCQqy33hA41V4XFn7agsCt/SIrlhk6j/IWHmLlMM2UKgna/JrLq0oB5fF4wPMzYtxcluDifQFAfd64HIWKy6AKf1PueaCa8xKebBBIyhfsZx8Kt8C68Or0sI9CiEnG+9hSnPPdxPXEM5u1AHQXdf+6I1IwW6bSp01GkoLI/+tVYrY3jibPudXYDVpln8GIyprZoAOmVdvnNUvH3tvUTxtaaC3K29z29705vcsmYxf15jVQgXF6+Kqd0FjBhGUpOmXYrVL6zSNgwDSFM/M2SNsmGMKAMk9WE+yxtoWpFz0nsRVWT+s0PvIiv3Gv9Tyewrcw53FeHNKU8n1qHEtyTvPj0P6f058dIKA8ZRx8ZSFvDrRUdHWGyxbnZlLkRT5EHuqFgiNus2nnNLZIRNOhAEiHU+vOT4NAYNxMGAT2s3kC2sqwukLgLajdawPvpDOczVI+XlXKbZ4s+wT7joBgiy53YrAjZU9UAzSZNJ/hLOeUED24CNCgxxq1KjnY6XibpyJ5OZiF1eH+MS6SQZE9FWDJAl4HAAdu7n/5ojpruSCzmZiaH8D9rZZT6TRlNuIpQGcJx9cp8jCpK9knM="
    branches:
      - master
      - develop

cache:
  directories:
    - '$HOME/.sonar/cache'

install:
  - pip3 install --upgrade python
  - wget --no-check-certificate https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz && tar -xvf cmake-3.7.2-Linux-x86_64.tar.gz
  - cmake-3.7.2-Linux-x86_64/bin/cmake ${CMAKE_CONFIG} .

script:
  - make
  - make unit
  - make validate

after_success:
  - if [[ "${BUILD_TYPE}" = "Release" && ("${TRAVIS_BRANCH}" = "master" || ${TRAVIS_BRANCH} = "develop") ]]; then make coverage; fi
  - if [ "${BUILD_TYPE}" = "Release" ]; then build-wrapper-linux-x86-64 --out-dir bw-output make clean all; fi
  - if [ "${BUILD_TYPE}" = "Release" ]; then sonar-scanner -Dproject.settings=.sonar-project.properties; fi

# On release builds, in case of tag (only on master), the binaries will be deployed. To do this, we clean all that have been build, build Debug, install it and do the same for Release.
before_deploy:
  - make clean
  - cmake-3.7.2-Linux-x86_64/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DPROJECT-MISC_CI_DEPLOY=on .
  - make
  - make install
  - cmake-3.7.2-Linux-x86_64/bin/cmake -DCMAKE_BUILD_TYPE=Release -DPROJECT-MISC_CI_DEPLOY=on .
  - make
  - make install
  - make dist

deploy:
  provider: releases
  api_key: '$GITHUB_API_KEY'
  file_glob: true
  file: yall*.tgz
  skip_cleanup: true
  on:
    tags: true
    condition: $BUILD_TYPE = Release
